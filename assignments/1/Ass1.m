%% Assignment 1: Introduction to System Identification
%  [WB2301] SIPE

%% Question 1: Signal generation 
% You can generate the signal by calling the |sim()| command directly from 
% the command line. You can then use the command |whos| to see which variables
% were created in the workspace. Note the difference between variables |t| 
% and |tout|. Variable |tout| is automatically generated by Simulink and it 
% holds the time instances used in evaluating the model. Variable |t| holds 
% the sample times at the sampling rate stated in the model. 
% So: Simulink uses a higher sample rate internally for obtaining
% accurate results, while we use sampling to obtain a time vector with a
% fixed sample rate of 100 Hz.

clear all
close all
clc

T   = 5;                % [s] Observation time
fs  = 100;              % [Hz] Samping frequency
dt  = 1/fs;             % [s] Sample time
sim('Ass1_System',T)    % Note that observation stop time and sample frequency are set in the model.
whos

% Observation time T = N * dt. The last sample of the measured signals
% needs to be removed in order to make the observation time exactly 5
% seconds.
N   = length(u);                % [-] # samples (also T /dt)
t   = (0 : N - 1) * dt;         % [s] Time vector

% Plot input and output signals.
figure
subplot(211); plot(t, u); xlabel('t [s]','Fontsize',14); ylabel('u [-]','Fontsize',14); title('Input','Fontsize',18)
set(gca,'FontSize',12)
subplot(212); plot(t, y); xlabel('t [s]','Fontsize',14); ylabel('y [-]','Fontsize',14); title('Output','Fontsize',18)
set(gca,'FontSize',12)


%% Question 1a

[Cuu, lags] = xcov(u, u, 'biased');
Cuy         = xcov(u, y, 'biased');
Cyu         = xcov(y, u, 'biased');
Cyy         = xcov(y, y, 'biased');
tau         = lags * dt; % Fill in the dots  [lags should be in seconds]

% Plot the covariances in one figure using subplot
figure('Name','Question 1a')
subplot(2,2,1)
    plot(tau, Cuu); 
    xlabel('tau [s]'); ylabel('C_{uu}')
subplot(2,2,2)
    plot(tau, Cuy); 
    xlabel('tau  [s]'); ylabel('C_{uy}')
subplot(2,2,3)
    plot(tau, Cyu); 
    xlabel('tau [s]'); ylabel('C_{yu}')
subplot(2,2,4)
    plot(tau, Cyy); 
    xlabel('tau [s]'); ylabel('C_{yy}')

 %% Question 1d
 
 Cyu_unbiased = xcov(y, u, 'unbiased');
 figure('Name', 'Question 1d')
    plot(tau, Cyu, 'b', tau, Cyu_unbiased, 'r')
    legend('biased', 'unbiased')
    xlabel('tau [s]'); ylabel('C_{yu}')
    
%% Question 3: Time Domain Models
clear all
close all
clc

% Create data
T   = 50;               % [s] Observation time
fs  = 100;              % [Hz] Samping frequency
dt  = 1/fs;             % [s]
N   = fs*T;             % [-] Number of samples
tv  = (0:N-1).'/fs;     % Time vector
fv  = [0:N-1]/N*fs;     % Frequency vector

% Simulate model
set_param('Ass1_System/Noise n','Variance','0.05');
options=simset('OutputPoints','specified'); % only produce output for the time values in vector <t>
load_system('Ass1_System')
sim('Ass1_System',tv,options)

% Generate iddata structure
dat = iddata(y, u, dt);
set(dat, 'timeunit', 's', 'inputname', 'u', 'outputname', 'y');
plot(dat)



%Plot
figure('Name','Question 3')
subplot(211)
loglog(fv, ...
legend({'ARX20','ARX3', 'OE3','True'})
ylabel('Gain...')

subplot(212)
semilogx(fv, ...
ylabel('Phase...')